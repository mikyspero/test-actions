name: Sync to GitLab
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  sync:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Important: fetch all history


      - name: Get commit author info
        id: author
        run: |
          echo "name=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "email=$(git log -1 --pretty=format:'%ae')" >> $GITHUB_OUTPUT

      - name: Sync with GitLab
        run: |
          # Fetch from GitLab
          git fetch gitlab main
          
          # Create a merge commit if necessary
          git merge --allow-unrelated-histories gitlab/main -m "Merge GitLab changes"
          
          # Tag for identification
          TAG_NAME="community-$(date +%Y%m%d%H%M%S)"
          git tag -a "$TAG_NAME" -m "Community contribution"
          
          # Push changes back to GitLab
          git push gitlab main
          git push gitlab "$TAG_NAME"

      #synchronizes the push
      - name: Push changes to GitLab without force
        run: |
          git push gitlab main
          
      - name: Cleanup
        if: always()
        run: git remote remove gitlab
