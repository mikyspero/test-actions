name: Sync to GitLab
on:
  push:
    branches: [ "main" ]
jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Get commit author info
        id: author
        run: |
          echo "name=$(git log -1 --pretty=format:'%an')" >> $GITHUB_OUTPUT
          echo "email=$(git log -1 --pretty=format:'%ae')" >> $GITHUB_OUTPUT
          
      - name: Configure Git
        env:
          GITLAB_TOKEN: ${{ secrets.GITLAB_TOKEN }}
          GITLAB_USERNAME: ${{ secrets.GITLAB_USERNAME }}
          GITLAB_REPO: ${{ secrets.GITLAB_REPO }}
        run: |
          git config user.name "${{ steps.author.outputs.name }}"
          git config user.email "${{ steps.author.outputs.email }}"
          git remote add gitlab https://oauth2:${GITLAB_TOKEN}@gitlab.com/${GITLAB_USERNAME}/${GITLAB_REPO}.git
          
      - name: Sync with GitLab
        run: |
          # Fetch from GitLab
          git fetch gitlab main
          
          # Create a temporary branch from GitLab's version
          git checkout -b temp_branch gitlab/main
          
          # Try to merge GitHub changes, preferring GitLab's version
          git merge -X theirs --no-edit origin/main || {
            # If merge fails, keep GitLab's version
            git merge --abort
            git reset --hard gitlab/main
          }
          
          # Push the result back to GitLab (no force needed since we're based on GitLab's version)
          git push gitlab HEAD:main
          
          # Add tag
          TAG_NAME="community"
          git tag -a "$TAG_NAME" -m "Community contribution"
          git push gitlab "$TAG_NAME"
          
      - name: Cleanup
        if: always()
        run: git remote remove gitlab
